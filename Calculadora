package Calculadora;

import Pilas.PilaA;

public class InfijoAPosfijo {
    
    public InfijoAPosfijo(){
    }
    //Metodo auxiliar para asignar el valor de los operadores para jerarquia
    private static int jerarquia(String operador){
        int jerarquia=0; 
        switch (operador){
            case "*":
                jerarquia = 3;
                break;
            case "/":
                jerarquia = 3;
                break;
            case "+":
                jerarquia = 2;
                break;
            case "-":
                jerarquia = 2;
                break;
            case "^":
                jerarquia = 4;
                break;
            case "(":
                jerarquia = 1;
                break;
            default: 
                jerarquia = 0;
                break;
        }
        return jerarquia;
    }
    //Método auxiliar para revisar si el char es operador
    private static boolean checarOperador(String c){
        boolean resp = false; 
        if(c.equals("+")||c.equals("-")||c.equals("*")||c.equals("/")||c.equals("^"))
            resp = true;
        return resp;  
    }
    //Método auxiliar para revisar si el char es un parentesis
    private static boolean parentesis(String c){
        boolean resp = false; 
        if(c.equals("(")||c.equals(")"))
            resp = true;
        return resp;   
    }
  
    //Metodo para convertir en posfijo basado en un string
    public static ArrayList<String> conviertePosfijo(ArrayList<String> infijo){
        PilaA <String> pila = new PilaA (100);  //Pila en donde guarda los operadores
        ArrayList<String> posfijo = new ArrayList(); //ArrayList del resultado
        String c;
        for(int i=0; i<infijo.size();i++){
            c = infijo.get(i);
            if(checarOperador(c)){ //Si el char es un operador revisa la jerarquia de pila.peek() y saca o mete de la pila
                while(!pila.isEmpty() && jerarquia(pila.peek())>=jerarquia(c))
                    posfijo.add(pila.pop());
                pila.push(c);
            }
            if(!checarOperador(c) && !parentesis(c)) //Si no es operador o parentesis, agrega al ArrayList posfijo
               posfijo.add(c);     
            else {
                if(c.equals("(")) //Agrega a la pila directo
                    pila.push(c);
                if(c==')'){
                    while(!pila.peek().equals(")) //Saca todo de la pila hasta que no encuentre el parentesis abierto
                        posfijo.add(pila.pop());
                    pila.pop();
                } 
            }   
        } //Una vez que se termino de revisar el ArrayList infijo, vacia la pila de operadores
        while(!pila.isEmpty())
            posfijo.add(pila.pop());
        return posfijo;
    }
       
    public static void main (String[]args){
        //Checando metodos auxiliares: Jerarquia
        System.out.println("Jerarquia: "+jerarquia('a'));
        System.out.println("Jerarquia: "+jerarquia('*'));
        System.out.println("Jerarquia: "+jerarquia('/');
        System.out.println("Jerarquia: "+jerarquia('-'));
        System.out.println("Jerarquia: "+jerarquia('+'));
        System.out.println("Jerarquia: "+jerarquia('^'));
        System.out.println("Jerarquia: "+jerarquia('('));
        //Checando programa posfijo
        ArrayList<Character> array = new ArrayList();
        array.add('a');
        array.add('+');
        array.add('b');
        array.add('*');
        array.add('d');
        array.add('/');
        array.add('z');
        System.out.println("Checando posfijo: "+conviertePosfijo(array));
        ArrayList<Character> array2 = new ArrayList();
        array2.add('a');
        array2.add('+');
        array2.add('(');
        array2.add('b');
        array2.add('-');
        array2.add('c');
        array2.add(')');
        System.out.println("Checando posfijo: "+conviertePosfijo(array2));
    }
}   
    

